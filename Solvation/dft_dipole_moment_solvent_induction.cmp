# Creator: Miquel Garcia-Rates
# Update : Dimitrios G. Liakos (June of 2024)
# Revised: June of 2025
#
# The protocole calculates how the dipole moment changes when solvating a solute.
# for this it calculates the ratio of the dipole moment in vacuum to the dipole 
# moment in a solvent
#
# For a reference to the methodology please refer to:
#
# Miquel Garcia-Rates Frank Neese, J Comput. Chem. 2020;41:922-939
# Effect of the Solute Cavity on the Solvation Energy and its Derivatives within the 
# Framework of the Gaussian Charge Scheme 
#
# This protocol needs two steps
# In Step 1 The geometry is optimized in vacuum and it dipole moment is evaluated
#
# In Step 2 The geometry optimized in the previous step is now optimized in the solvent
#           and the dipole moment is evaluated in the solvent
#
# Then the ratio d(solvent)/d(vacuum) is evaluated
#
#****************************************** NOTES ******************************************
# NOTE 1: The details of the calculation (functional, basis set, ... etc) can be adjusted but they 
#         should be the same in both calculations 
#
# NOTE 2: For the case of solvation we use the Gaussian charge scheme with a vdW-type cavity for
#         the solute cavity (surfacetype vdw_gaussian in the %cpcm block)
#
# NOTE 3: For the second step here we guess charge and multiplicity 0 and 1.
#
# NOTE 4: For the first calculation we use the %base to change the name to vacuumGeometry so that 
#         it is easy to know the name for the second one. This could of course change but it should 
#         be consistent for both calculations
#
# NOTE 5: This scheme will work for DFT calculations because we read the total energy through the
#         it is easy to know the name for the second one. This could of course change but it should
#         be consistent for both calculations
#
# --------------------  Variables  ------------------------------                
# ----------   Variables that could be adjusted using 'with'-----
variable molecule;
variable charge        = 0;
variable mult          = 1;
Variable method        = "RKS B3LYP RIJCOSX D3BJ";
Variable basis         = "def2-TZVP def2/J";
Variable restOfInput   = "VeryTightSCF VeryTightOpt";
Variable mySolvent     = "water";
# -----------------  Rest of variables --------------------------
Variable d_vac, d_solv;      # Dipole moments in vacuum and solvent
Variable ratio;              # ratio of dipole moments

# ----------------------------------------------------------------
# Optimization in vacuum
# ----------------------------------------------------------------
NewStep
  ! &{method} &{basis} &{restOfInput} 
  *xyzfile &{charge} &{mult} &{molecule} 
  %base "vacuumGeometry" 
StepEnd
d_vac.readProperty(propertyName="SCF_DIPOLE_MAGNITUDE");   

# ----------------------------------------------------------------
# Second step: Optimization in solvent
# ----------------------------------------------------------------
NewStep
  !&{method} &{basis} &{restOfInput} CPCM(&{mySolvent})
  * xyzfile &{charge} &{mult} vacuumGeometry.xyz
  %cpcm
    surfacetype vdw_gaussian
  End
StepEnd
d_solv.readProperty(propertyName="SCF_DIPOLE_MAGNITUDE");   

# ----------------------------------------------------------------
# Now evaluate the ratio
# ----------------------------------------------------------------
ratio  = d_solv/d_vac;            

# ----------------------------------------------------------------
# Print the results
# ----------------------------------------------------------------
print("\n\n============================================================\n");
print("==================== SUMMARY OF RESULTS ====================\n");
print("============================================================\n\n");
print(" Molecule                : %s\n", molecule);
print(" Charge                  : %-18d\n", charge);
print(" Mult                    : %-18d\n", mult);
print(" Method                  : %s\n", method);
print(" Basis set               : %s\n", basis);
print(" Rest of input           : %s\n", restOfInput);
print(" Solvent                 : %s\n", mySolvent);
print(" Dipole moment in vacuum : %-18.6lf\n", d_vac);
print(" Dipole moment in solvent: %-18.6lf\n", d_solv);
print(" Ratio                   : %-10.5lf\n", ratio);

EndRun
